{"version":3,"file":"static/js/44.59a8951d.chunk.js","mappings":"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","sources":["components/CstmBtn/index.tsx","components/GridContainer/index.tsx","components/GridItem/index.tsx","components/AnswerAlert/index.tsx","pages/Quiz/QuizBox.tsx","pages/Quiz/index.tsx"],"sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\n\nexport default function CstmBtn({ ...props }): JSX.Element {\n  return (\n    <Button\n      sx={{ mb: '10px' }}\n      fullWidth\n      variant=\"contained\"\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport { Grid } from '@mui/material';\n\nconst GridContainer = ({ ...props }) => {\n  return (\n    <Grid\n      container\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-around\"\n      minHeight=\"100%\"\n      {...props}\n    />\n  );\n};\n\nexport default GridContainer;\n","import React from 'react';\nimport { Grid } from '@mui/material';\n\nconst GridItem = ({ ...props }) => {\n  return <Grid item {...props} />;\n};\n\nexport default GridItem;\n","import { Collapse, Alert } from '@mui/material';\nimport React from 'react';\nimport { AnswerState } from 'utils/constants';\n\ninterface Props {\n  answer: AnswerState;\n}\n\nexport default function AnswerAlert(props: Props) {\n  const { answer } = props;\n\n  return (\n    <Collapse sx={{ width: '100%' }} in={answer !== AnswerState.NoAnswer}>\n      <Alert\n        sx={{ mb: 2 }}\n        severity={answer === AnswerState.Correct ? 'success' : 'error'}\n      >\n        Your answer is{' '}\n        {answer === AnswerState.Correct ? 'correct!' : 'incorrect!'}\n      </Alert>\n    </Collapse>\n  );\n}\n","import React from 'react';\nimport { Typography } from '@mui/material';\n\nimport GridContainer from 'components/GridContainer';\nimport GridItem from 'components/GridItem';\nimport CstmBtn from 'components/CstmBtn';\nimport AnswerAlert from 'components/AnswerAlert';\nimport { QUIZ_AMOUNT, AnswerState, QuizType } from 'utils/constants';\n\ninterface Props {\n  quiz: QuizType;\n  quizNum: number;\n  score: number;\n  answer: AnswerState;\n  handleCheckClick: (answer: string) => void;\n  handleNextClick: () => void;\n}\n\nexport default function QuizBox(props: Props): JSX.Element {\n  const {\n    quiz,\n    quizNum,\n    score,\n    answer,\n    handleCheckClick,\n    handleNextClick,\n  } = props;\n  return (\n    <GridContainer>\n      <GridItem>\n        <Typography variant=\"h4\" align=\"center\">\n          {quiz.category}\n        </Typography>\n        <Typography variant=\"h6\" align=\"center\">\n          Your Score: {score}\n        </Typography>\n        <Typography variant=\"body1\" align=\"center\">\n          Question: {quizNum + 1} / {QUIZ_AMOUNT}\n        </Typography>\n      </GridItem>\n      <GridItem>\n        <Typography\n          variant=\"body1\"\n          dangerouslySetInnerHTML={{\n            __html: quiz.question,\n          }}\n        />\n      </GridItem>\n      <GridItem alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n        <AnswerAlert answer={answer} />\n        <CstmBtn\n          variant=\"outlined\"\n          onClick={() => {\n            handleCheckClick('True');\n          }}\n          disabled={answer !== AnswerState.NoAnswer}\n        >\n          Yes\n        </CstmBtn>\n        <CstmBtn\n          variant=\"outlined\"\n          onClick={() => {\n            handleCheckClick('False');\n          }}\n          disabled={answer !== AnswerState.NoAnswer}\n        >\n          No\n        </CstmBtn>\n        {answer ? <CstmBtn onClick={handleNextClick}>Next</CstmBtn> : null}\n      </GridItem>\n    </GridContainer>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nimport { quizListSelector, getQuizList, setAnswerList } from 'store';\nimport {\n  QUIZ_AMOUNT,\n  QUIZ_DIFFICULTY,\n  QUIZ_TYPE,\n  AnswerState,\n} from 'utils/constants';\nimport QuizBox from './QuizBox';\n\nconst Quiz = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const quizList: any = useSelector(quizListSelector);\n  const [quizNum, setQuizNum] = useState(0);\n  const [answer, setAnswer] = useState(AnswerState.NoAnswer);\n  const [answers, setAnswers] = useState([false]);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    !quizList &&\n      dispatch(\n        getQuizList({\n          params: {\n            amount: QUIZ_AMOUNT,\n            difficulty: QUIZ_DIFFICULTY,\n            type: QUIZ_TYPE,\n          },\n        }),\n      );\n  }, []);\n\n  const handleCheckClick = useCallback(\n    (answer: string) => {\n      if (answer === quizList.results[quizNum].correct_answer) {\n        setAnswer(AnswerState.Correct);\n        setAnswers(prevState => {\n          prevState[quizNum] = true;\n          return [...prevState];\n        });\n        setScore(prevState => prevState + 1);\n      } else setAnswer(AnswerState.Incorrect);\n    },\n    [quizList, quizNum],\n  );\n\n  const handleNextClick = useCallback(() => {\n    if (quizNum < QUIZ_AMOUNT - 1) {\n      setAnswer(AnswerState.NoAnswer);\n      setQuizNum(prevState => prevState + 1);\n    } else {\n      dispatch(\n        setAnswerList({\n          answers: answers,\n        }),\n      );\n      navigate('/result');\n    }\n  }, [quizNum, answers]);\n\n  return (\n    quizList && (\n      <QuizBox\n        quiz={quizList.results[quizNum]}\n        quizNum={quizNum}\n        score={score}\n        answer={answer}\n        handleCheckClick={handleCheckClick}\n        handleNextClick={handleNextClick}\n      />\n    )\n  );\n};\n\nexport default Quiz;\n"],"names":["CstmBtn","props","sx","mb","fullWidth","variant","container","display","flexDirection","justifyContent","minHeight","item","AnswerAlert","answer","Collapse","width","in","AnswerState","Alert","severity","QuizBox","quiz","quizNum","score","handleCheckClick","handleNextClick","GridContainer","GridItem","Typography","align","category","QUIZ_AMOUNT","dangerouslySetInnerHTML","__html","question","alignItems","onClick","disabled","dispatch","useDispatch","navigate","useNavigate","quizList","useSelector","quizListSelector","useState","setQuizNum","setAnswer","answers","setAnswers","setScore","useEffect","getQuizList","params","amount","difficulty","QUIZ_DIFFICULTY","type","QUIZ_TYPE","useCallback","results","correct_answer","prevState","setAnswerList"],"sourceRoot":""}